<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.reactome.release</groupId>
	<artifactId>data-exporter</artifactId>
	<version>2.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>Data exports for submission to NCBI, UCSC, and Europe PMC</description>
	<url>https://github.com/reactome/release-data-exporter</url>

	<organization>
		<name>The Ontario Institute for Cancer Research</name>
		<url>https://www.oicr.on.ca</url>
	</organization>

	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Joel Weiser</name>
			<email>joel.weiser@oicr.on.ca</email>
			<organization>Reactome</organization>
			<organizationUrl>https://reactome.org</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/reactome/release-data-exporter.git</connection>
		<developerConnection>scm:git:ssh://github.com/reactome/release-data-exporter.git</developerConnection>
		<url>https://github.com/reactome/release-data-exporter</url>
		<tag>develop</tag>
	</scm>

	<properties>
		<!-- dependencies -->
		<commons.net.version>3.6</commons.net.version>
		<commons.lang.version>3.9</commons.lang.version>
		<hamcrest.version>2.2</hamcrest.version>
		<jcommander.version>1.78</jcommander.version>
		<jetbrains.annotations.version>18.0.0</jetbrains.annotations.version>
		<junit.version>5.5.2</junit.version>
		<mockito.version>3.2.4</mockito.version>
		<neo4j.driver.version>1.7.5</neo4j.driver.version>
		<neo4j.harness>3.5.13</neo4j.harness>
		<release.common.lib.version>1.2.0</release.common.lib.version>

		<!-- build -->
		<jdk.version>1.8</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- maven build and plugins -->
		<maven.assembly.version>2.6</maven.assembly.version>
		<maven.compiler.version>3.5.1</maven.compiler.version>
		<maven.failsafe.version>2.12.4</maven.failsafe.version>
		<maven.gpg.version>1.5</maven.gpg.version>
		<maven.jar.version>2.6</maven.jar.version>
		<maven.javadoc.version>2.10.3</maven.javadoc.version>
		<maven.release.version>2.5.3</maven.release.version>
		<maven.source.version>2.4</maven.source.version>
		<maven.surefire.version>2.12.4</maven.surefire.version>
		<maven.tidy.version>1.1.0</maven.tidy.version>
		<nexus-staging-maven-plugin>1.6.7</nexus-staging-maven-plugin>

		<!--
		integration tests run by default when running the command "mvn verify"; can be overridden using the option
		"-DskipITs=true"
		-->
		<skipITs>false</skipITs>
	</properties>

	<dependencies>
		<!-- Main dependencies -->
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
			<version>${jcommander.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>${commons.net.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons.lang.version}</version>
		</dependency>
		<dependency>
			<groupId>org.neo4j.driver</groupId>
			<artifactId>neo4j-java-driver</artifactId>
			<version>${neo4j.driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.reactome.release</groupId>
			<artifactId>release-common-lib</artifactId>
			<version>${release.common.lib.version}</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.neo4j.test</groupId>
			<artifactId>neo4j-harness</artifactId>
			<version>${neo4j.harness}</version>
			<scope>test</scope>
		</dependency>

		<!-- Compilation dependencies -->
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>${jetbrains.annotations.version}</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<plugins>
			<!-- sets the Java compiler version targeted by Maven -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>

			<!--
			allows 'mvn clean compile assembly:single' command to create a jar with dependencies

			execution section also allows 'mvn clean package' command to create two jars - with/without dependencies
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven.assembly.version}</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>org.reactome.release.dataexport.Main</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.version}</version>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!--
							Default value is defined in the <properties> section and will be applied to integration
							tests when running the command "mvn verify", but can be overwritten to either skip
							or run integration tests with the command "mvn verify -DskipITs=[true|false]"
							-->
							<skipTests>${skipITs}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- executes unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.version}</version>
				<configuration>
					<systemProperties>
						<property>
							<name>java.util.logging.config.file</name>
							<value>src/test/resources/logging.properties</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>

			<!--
			allows 'mvn release' command to create a new release of the project
			https://maven.apache.org/maven-release/maven-release-plugin/
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven.release.version}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
					<tagNameFormat>v@{project.version}</tagNameFormat>
				</configuration>
			</plugin>

			<!-- Nexus staging plugin for Sonatype deployment -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>${nexus-staging-maven-plugin}</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>

			<!-- Generate source jar file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Generate JavaDoc jar file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Signs deployed jar, source jar, and JavaDoc jar with GPG -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${maven.gpg.version}</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--
			checks the POM file has the order specified by the POM Code Convention
			http://maven.apache.org/developers/conventions/code.html#POM_Code_Convention
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tidy-maven-plugin</artifactId>
				<version>${maven.tidy.version}</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<!-- required for Reactome library SNAPSHOTS prior to release on Maven Central -->
		<repository>
			<id>oss.sonatype.org-snapshot</id>
			<url>http://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<!-- Configures the distribution to nexus repository -->
	<distributionManagement>
		<!-- Sonatype Release repo -->
		<repository>
			<id>ossrh</id>
			<name>Sonatype Release Repository</name>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>

		<!-- Sonatype SNAPSHOT repo -->
		<snapshotRepository>
			<id>ossrh</id>
			<name>Sonatype Snapshot Repository</name>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
</project>
